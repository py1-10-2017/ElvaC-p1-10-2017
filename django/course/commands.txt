# Using the shell...

# Create 5 books with the following names: C sharp, Java, Python, PHP, Ruby
Book.objects.create(name = "C shaprp")
Book.objects.create(name ="Java")
Book.objects.create(name ="Python")
Book.objects.create(name ="PHP"
Book.objects.create(name ="Ruby")

# Create 5 different authors: Mike, Speros, John, Jadee, Jay
Author.objects.create(first_name = "Mike")
Author.objects.create(first_name = "Speros")
Author.objects.create(first_name = "John")
Author.objects.create(first_name = "Jadee")
Author.objects.create(first_name = "Jay")

# Add a new field in the authors table called 'notes'.  Make this a TextField.  Successfully create and run the migration files.
python manage.py makemigrations
python manage.py migrate
python manage.py shell
from apps.book_authors.models import *

# Change the name of the 5th book to C#
b= Book.objects.get(id = 5)
b.name = "C#"
b.save()

# Change the first_name of the 5th author to Ketul
c = Author.objects.get(id=5)
c.first_name = "Ketul"
c.save()

# Assign the first author to the first 2 books

author1 = Author.objects.get(id = 1)
book1 = Book.objects.get(id=1)
book2 = Book.objects.get(id = 2)
author1.books.add(book1,book2)

# Assign the second author to the first 3 books
author2 = Author.objects.get(id = 2)
book3 = Book.objects.get(id = 3)
author2.books.add(book1,book2,book3)

# Assign the third author to the first 4 books
author3 =Author.objects.get(id = 3)
book4 = Book.objects.get(id = 4)
author3.books.add(book1,book2,book3,book4)

# Assign the fourth author to the first 5 books (or in other words, all the books)
author4 = Author.objects.get(id = 4)
book5 = Book.objects.get(id = 5)
author4.books.add(book1,book2,book3,book4,book5)

# For the 3rd book, retrieve all the authors
Author.objects.filter(books__id=3)

# For the 3rd book, remove the first author
author1 = Author.objects.get(id=1)

# For the 2nd book, add the 5th author as one of the authors
book2.authors.add(author5)
book3.authors.remove(author1)

# Find all the books that the 3rd author is part of
author3.books.all()

# Find all the books that the 2nd author is part of